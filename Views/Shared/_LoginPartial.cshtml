@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <span id="manage" class="nav-link disabled" title="Manage" style="cursor: default; color: #FFF;">
                <i class="fa fa-user-circle" aria-hidden="true"></i>
                Hello @UserManager.GetUserName(User)!
            </span>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link btn-login" id="login" asp-area="Identity" asp-page="/Account/Login">
                <i class="fa fa-sign-in" aria-hidden="true"></i>
                Login
            </a>
        </li>
    }
</ul>
